/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/cloud/c.glb 
*/

import { useGLTF } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';
import React, { useRef } from 'react';
import { fadeOnBeforeCompile } from '../utils/fadeMaterial';

export function C({ sceneOpacity, ...props }) {
  const { nodes, materials } = useGLTF('./models/cloud/c.glb');

  const materialRef = useRef();

  useFrame(() => {
    materialRef.current.opacity = sceneOpacity.current;
  });
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.cloud.geometry}>
        <meshStandardMaterial
          ref={materialRef}
          onBeforeCompile={fadeOnBeforeCompile}
          envMapIntensity={2}
          transparent
        />
      </mesh>
    </group>
  );
}

useGLTF.preload('./models/cloud/c.glb');
