/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/planet.glb 
*/

import React, { useMemo, useRef } from 'react';
import { useGLTF } from '@react-three/drei';

import { fullOpacityOnApproach } from '../utils/fadeMaterial';

export function Planet({ curvePoints, props }) {
  const { nodes, materials } = useGLTF('./models/planet.glb');
  useMemo(() => {
    for (const key in materials) {
      if (materials.hasOwnProperty(key)) {
        const material = materials[key];
        material.transparent = true;
        material.onBeforeCompile = fullOpacityOnApproach;
      }
    }
  }, [materials]);

  return (
    <group {...props} dispose={null}>
      <mesh
        scale={10}
        position={[0, -4, 0]}
        geometry={nodes.gr.geometry}
        material={materials.pl11}
      />
    </group>
  );
}

useGLTF.preload('./models/planet.glb');
