/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 su8.glb 
*/
import React, { useRef, useEffect, useMemo } from 'react';
import { useGLTF, useAnimations } from '@react-three/drei';
import { fullOpacityOnApproach } from '../utils/fadeMaterial';

export function Su8({ props, curvePoints }) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF('./su8.glb');
  const { actions } = useAnimations(animations, group);

  useMemo(() => {
    for (const key in materials) {
      if (materials.hasOwnProperty(key)) {
        const material = materials[key];
        material.transparent = true;
        material.onBeforeCompile = fullOpacityOnApproach;
      }
    }
  }, [materials]);
  useEffect(() => {
    if (actions?.['CylinderAction']?.play() !== undefined) {
      actions?.['CylinderAction'].play();
    }
    if (actions?.['PlaneAction']?.play() !== undefined) {
      actions?.['PlaneAction'].play();
    }
    if (actions?.['SphereAction']?.play() !== undefined) {
      actions?.['SphereAction'].play();
    }
    if (actions?.['Cube.001Action']?.play() !== undefined) {
      actions?.['Cube.001Action'].play();
    }
    if (actions?.['Cube.002Action']?.play() !== undefined) {
      actions?.['Cube.002Action'].play();
    }
    if (actions?.['Sphere.001Action']?.play() !== undefined) {
      actions?.['Sphere.001Action'].play();
    }
    if (actions?.['Sphere.002Action']?.play() !== undefined) {
      actions?.['Sphere.002Action'].play();
    }
    if (actions?.['Plane.001Action']?.play() !== undefined) {
      actions?.['Plane.001Action'].play();
    }
    if (actions?.['Plane.002Action']?.play() !== undefined) {
      actions?.['Plane.002Action'].play();
    }
    if (actions?.['Plane.003Action']?.play() !== undefined) {
      actions?.['Plane.003Action'].play();
    }
    if (actions?.['Plane.004Action']?.play() !== undefined) {
      actions?.['Plane.004Action'].play();
    }
    if (actions?.['Plane.005Action']?.play() !== undefined) {
      actions?.['Plane.005Action'].play();
    }
    if (actions?.['Plane.006Action']?.play() !== undefined) {
      actions?.['Plane.006Action'].play();
    }
  }, [actions]);
  return (
    <group
      ref={group}
      {...props}
      dispose={null}
      scale={3}
      position={[curvePoints.x - 4, curvePoints.y, curvePoints.z]}
    >
      <group name="Scene">
        <mesh
          name="Torus"
          geometry={nodes.Torus.geometry}
          material={materials['Material.008']}
          rotation={[0.137, -0.133, -0.572]}
        />
        <mesh
          name="Cube"
          geometry={nodes.Cube.geometry}
          material={nodes.Cube.material}
          rotation={[0.106, -0.076, -0.538]}
        >
          <mesh
            name="Cube001"
            geometry={nodes.Cube001.geometry}
            material={nodes.Cube001.material}
            rotation={[Math.PI, -0.239, Math.PI]}
          >
            <group name="Cylinder" position={[-0.222, -0.221, 1.004]} scale={0}>
              <mesh
                name="Cylinder_1"
                geometry={nodes.Cylinder_1.geometry}
                material={materials['Material.005']}
              />
              <mesh
                name="Cylinder_2"
                geometry={nodes.Cylinder_2.geometry}
                material={materials['Material.001']}
              />
            </group>
            <group name="Plane" position={[-0.29, -0.228, 0.787]} scale={0}>
              <mesh
                name="Plane001_1"
                geometry={nodes.Plane001_1.geometry}
                material={materials['Material.010']}
              />
              <mesh
                name="Plane001_2"
                geometry={nodes.Plane001_2.geometry}
                material={materials['Material.011']}
              />
            </group>
          </mesh>
          <mesh
            name="Cube002"
            geometry={nodes.Cube002.geometry}
            material={nodes.Cube002.material}
            rotation={[0, 0.49, 0]}
          >
            <group
              name="Sphere001"
              position={[0.479, 0.101, -0.789]}
              rotation={[-0.072, 0, 0.423]}
              scale={0.93}
            >
              <mesh
                name="Sphere001_1"
                geometry={nodes.Sphere001_1.geometry}
                material={materials['Material.005']}
              />
              <mesh
                name="Sphere001_2"
                geometry={nodes.Sphere001_2.geometry}
                material={materials.Material}
              />
              <mesh
                name="Plane001"
                geometry={nodes.Plane001.geometry}
                material={materials['Material.006']}
                position={[0.001, 0.071, -0.007]}
                rotation={[-0.177, 0.189, 0.77]}
                scale={0.082}
              />
              <mesh
                name="Plane002"
                geometry={nodes.Plane002.geometry}
                material={materials['Material.006']}
                position={[0.001, 0.071, -0.007]}
                rotation={[-0.177, 0.189, 1.338]}
                scale={0.082}
              />
              <mesh
                name="Plane003"
                geometry={nodes.Plane003.geometry}
                material={materials['Material.006']}
                position={[0.001, 0.071, -0.007]}
                rotation={[-0.177, 0.189, 1.905]}
                scale={0.082}
              />
              <mesh
                name="Plane004"
                geometry={nodes.Plane004.geometry}
                material={materials['Material.006']}
                position={[0.001, 0.071, -0.007]}
                rotation={[-0.177, 0.189, 0.244]}
                scale={0.082}
              />
              <mesh
                name="Plane005"
                geometry={nodes.Plane005.geometry}
                material={materials['Material.006']}
                position={[0.001, 0.071, -0.007]}
                rotation={[-0.177, 0.189, -0.308]}
                scale={0.082}
              />
              <mesh
                name="Plane006"
                geometry={nodes.Plane006.geometry}
                material={materials['Material.006']}
                position={[0.001, 0.071, -0.007]}
                rotation={[-0.177, 0.189, -0.897]}
                scale={0.082}
              />
              <mesh
                name="Sphere002"
                geometry={nodes.Sphere002.geometry}
                material={materials['Material.006']}
                scale={0}
              />
            </group>
          </mesh>
          <mesh
            name="Sphere"
            geometry={nodes.Sphere.geometry}
            material={materials.pl1}
            rotation={[-0.009, 0.054, 0.009]}
          />
        </mesh>
      </group>
    </group>
  );
}

useGLTF.preload('./su8.glb');
